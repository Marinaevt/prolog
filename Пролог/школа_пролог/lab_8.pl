:-dynamic(член/3).
член('Иванов',15,уплачено).
член('Иванов',33,не_уплачено).
член('Хромов',40,не_уплачено).
взнос(Возраст,рублей(1)):-Возраст<18.
взнос(Возраст,рублей(2)):-Возраст>=18.
пополнить_состав(Член):-assert(Член).
выдать_сведения(член(Фамилия,Возраст,Данные_об_уплате)):-
член(Фамилия,Возраст,Данные_об_уплате),
взнос(Возраст,Сумма),
write(член(Фамилия,Возраст,Сумма,Данные_об_уплате)),nl,fail.
выдать_сведения(_).
сократить_состав(Член):-retractall(Член).
запись_об_уплате(член(Фамилия,Возраст)):-
retract(член(Фамилия,Возраст,не_уплачено)),
assert(член(Фамилия,Возраст,уплачено)).
установить_счетчик(Имя,Начало):-
retractall(счетчик(Имя,_)),
assert(счетчик(Имя,Начало)).

увеличить_счетчик(Имя,Прирост):-
retract(счетчик(Имя,Значение)),
Новое_значение is Значение+Прирост,
assert(счетчик(Имя,Новое_значение)).

сбросить_счетчик(Имя,Значение):-
retract(счетчик(Имя,Значение)).

подсчет_членов(член(Фамилия,Возраст,Данные_об_уплате),_):-
установить_счетчик(число_членов,0),
член(Фамилия,Возраст,Данные_об_уплате),
увеличить_счетчик(число_членов,1),
fail.
подсчет_членов(_,Счетчик):-
сбросить_счетчик(число_членов,Счетчик).

меню:-repeat,
nl,nl,write(' МЕНЮ'),nl,
write('1. Сведения о членах клуба.'),nl,
write('2. Посчитать количество членов.'),nl,
write('3. Добавить запись о члене клуба.'),nl,
write('0. ВЫХОД'),nl,nl,
write('Введите номер пункта меню '),
read(Х),
обработать(Х).

обработать(0):-!.
обработать(Х):-пункт(Х),fail.

пункт(1):-nl,write('Состав клуба:'),
nl,выдать_сведения(_),!.
пункт(2):-nl,подсчет_членов(член(_,_,_),Число),
write('Количество членов клуба = '),
write(Число),nl,!.
пункт(3):-nl,write('Введите данные нового члена клуба '),nl,
write('Фамилия '),read(Фамилия),
write('Возраст '),read(Возраст),
write('Отметка об уплате взноса '),read(Данные_об_уплате),
пополнить_состав(член(Фамилия,Возраст,Данные_об_уплате)),!.

пункт(_):-write('Такой пункт не определен!'),nl,!.

